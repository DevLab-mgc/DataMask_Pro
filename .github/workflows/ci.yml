name: DataMask Pro CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Django Tests
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        python manage.py test core.tests

  frontend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: datamask-frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      working-directory: datamask-frontend
      run: npm ci
    
    - name: Lint Frontend Code
      working-directory: datamask-frontend
      run: npm run lint
    
    - name: Run Frontend Tests
      working-directory: datamask-frontend
      run: npm test

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r . -f custom

    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'DataMask Pro'
        path: '.'
        format: 'HTML'
      
    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v2
      with:
        name: dependency-check-report
        path: OWASP-Dependency-Check-Report.html

  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install locust
    
    - name: Run Performance Tests
      run: |
        # Placeholder for performance testing script
        # You would replace this with actual locust or k6 performance tests
        echo "Running performance tests..."

  deploy-staging:
    needs: [backend-tests, frontend-tests, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Staging
      run: |
        # Add deployment script or use cloud provider's GitHub Action
        echo "Deploying to staging environment..."

  deploy-production:
    needs: [backend-tests, frontend-tests, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        # Add deployment script or use cloud provider's GitHub Action
        echo "Deploying to production environment..."
